{"ast":null,"code":"let initialState = {\n  list: []\n};\nlet toDoReducer = (state = initialState, action) => {\n  console.log(action.payload);\n  switch (action.type) {\n    case \"TO_ADD\":\n      return {\n        list: [...state.list, action.payload]\n      };\n    case \"TO_DELETE\":\n      state.list.splice(action.payload, 1);\n      return {\n        list: [...state.list]\n      };\n    case \"TO_REMOVE\":\n      return {\n        list: []\n      };\n    case \"TO_UPDATE\":\n      //         state.list.map((index,item)=>{\n      // return (action.payload[0]===index)?{list : [...state.list, action.payload[1]]}:{list : [...state.list]};\n\n      //         })\n      // let updatedList = state.list.map()\n      state.list.splice(action.payload[0], 1, action.payload[1]);\n      return {\n        list: [...state.list]\n      };\n    // const indexToUpdate = action.payload[0];\n    // // Create a new list with the updated element\n    // const updatedList = [...state.list];\n    // updatedList[indexToUpdate] = action.payload[1];\n\n    // // Return the updated state\n    // return { ...state, list: updatedList };\n\n    //        state.list.map((index,element)=>{\n    //            if(index===action.payload[0]){\n    //             return {list : [state.list.splice(action.payload[0],1,action.payload[1])]}\n    //            }\n    //             else{\n    //             return {list : [...state.list]}\n    // }\n    //         })\n    // return {list : [...state.list]};\n\n    // return {list : [...state.list, action.payload.toDoAdd]};\n    default:\n      return state;\n  }\n};\nexport default toDoReducer;","map":{"version":3,"names":["initialState","list","toDoReducer","state","action","console","log","payload","type","splice"],"sources":["C:/Users/HP/OneDrive/Desktop/react/todoappp/todo/todo-app/src/components/Todoreducer.js"],"sourcesContent":["let initialState = {\r\n    list : []\r\n}\r\n\r\nlet toDoReducer = (state = initialState,action)=>{\r\n    console.log(action.payload);\r\nswitch (action.type) {\r\n    case \"TO_ADD\":\r\n        \r\n    return {list : [...state.list, action.payload]};\r\n\r\n    case \"TO_DELETE\":\r\n        state.list.splice(action.payload,1)\r\n    return {list : [...state.list]};\r\n\r\n    case \"TO_REMOVE\":\r\n    return {list : []};\r\n     case \"TO_UPDATE\":\r\n//         state.list.map((index,item)=>{\r\n// return (action.payload[0]===index)?{list : [...state.list, action.payload[1]]}:{list : [...state.list]};\r\n\r\n//         })\r\n        // let updatedList = state.list.map()\r\n        state.list.splice(action.payload[0],1,action.payload[1])\r\n        return {list : [...state.list]}; \r\n        // const indexToUpdate = action.payload[0];\r\n        // // Create a new list with the updated element\r\n        // const updatedList = [...state.list];\r\n        // updatedList[indexToUpdate] = action.payload[1];\r\n  \r\n        // // Return the updated state\r\n        // return { ...state, list: updatedList };\r\n  \r\n//        state.list.map((index,element)=>{\r\n//            if(index===action.payload[0]){\r\n//             return {list : [state.list.splice(action.payload[0],1,action.payload[1])]}\r\n//            }\r\n//             else{\r\n//             return {list : [...state.list]}\r\n// }\r\n//         })\r\n      // return {list : [...state.list]};\r\n        \r\n        // return {list : [...state.list, action.payload.toDoAdd]};\r\n    default:\r\n        return state;\r\n}\r\n}\r\nexport default toDoReducer;"],"mappings":"AAAA,IAAIA,YAAY,GAAG;EACfC,IAAI,EAAG;AACX,CAAC;AAED,IAAIC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAACI,MAAM,KAAG;EAC7CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;EAC/B,QAAQH,MAAM,CAACI,IAAI;IACf,KAAK,QAAQ;MAEb,OAAO;QAACP,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAEG,MAAM,CAACG,OAAO;MAAC,CAAC;IAE/C,KAAK,WAAW;MACZJ,KAAK,CAACF,IAAI,CAACQ,MAAM,CAACL,MAAM,CAACG,OAAO,EAAC,CAAC,CAAC;MACvC,OAAO;QAACN,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAI;MAAC,CAAC;IAE/B,KAAK,WAAW;MAChB,OAAO;QAACA,IAAI,EAAG;MAAE,CAAC;IACjB,KAAK,WAAW;MACrB;MACA;;MAEA;MACQ;MACAE,KAAK,CAACF,IAAI,CAACQ,MAAM,CAACL,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAACH,MAAM,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;MACxD,OAAO;QAACN,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAI;MAAC,CAAC;IAC/B;IACA;IACA;IACA;;IAEA;IACA;;IAER;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACM;;IAEE;IACJ;MACI,OAAOE,KAAK;EACpB;AACA,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}